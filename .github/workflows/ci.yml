name: MegaMek CI with Gradle

on:
  pull_request:
    branches: [master]

env:
  GRADLE_OPTS: "-Dscan.link.VCS=${{ github.event.pull_request.html_url }}"

jobs:
  ci_cd:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        java-distribution: [temurin]
        java-version: [17]
      fail-fast: false

    steps:
      - name: "Check out MegaMek"
        uses: actions/checkout@v4
        with:
          path: megamek

      - name: Set up ${{ matrix.java-distribution }} JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.java-distribution }}
          java-version: ${{ matrix.java-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Build with Gradle
        working-directory: megamek
        run: ./gradlew build  --stacktrace --scan

      - name: Upload Test Logs on Failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cd-failure-logs
          path: ./megamek/megamek/build/reports/

      - name: CodeCov.io Coverage Report
        uses: codecov/codecov-action@v4
        with:
          directory: ./megamek/megamek/build/reports/jacoco/test
          fail_ci_if_error: false
          verbose: true

      #      - name: Upload Zip Artifacts
      #        uses: actions/upload-artifact@v4
      #        with:
      #          name: mm-release-zip-${{ matrix.java-distribution }}-jdk${{ matrix.java-version }}
      #          path: ./megamek/megamek/build/distributions/*.zip

      - name: Upload TarGZ Release
        uses: actions/upload-artifact@v4
        with:
          name: mm-release-tar-gz-${{ matrix.java-distribution }}-jdk${{ matrix.java-version }}
          path: ./megamek/megamek/build/distributions/*.tar.gz
