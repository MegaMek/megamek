package megamek.server.victory;
import megamek.common.IGame;
import megamek.common.Report;
import java.util.*;


/**
 *  interface for classes judging whether a victory occurred or not. 
 *  these classes may not modify game state. Reporting must be done
 *  via the given interface. 
 *
 *  classes also should not have any nasty internal state outside methods
 *  this will guarantee them to act _only_ based on gamestate
 */
public interface Victory
{
    /**
     *  @return a result with true if victory occured, false if not
     *          must not return null
     *          MUST NOT modify game state!
     */
    public Result victory(
                    IGame game);
    /**
     *  result class which can be queried for winner and if 
     *  victory occurred
     *  victory might be true and winner "None" if the players
     *  have drawn
     *  winner might be NONE and team set to winning team.
     *
     *
     *  this interface should be extended to support multiple 
     *  players/teams who have drawn!
     *
     *  this should actually be a victorypoint-like structure with
     *  boolean for "game end" (victory) and 0.0(loss) to 1.0(victory)
     *  score for each team and player
     */
    public static interface Result
    {
        /**
         *  @return true if the game is about to end since someone has
         *          completed the victory conditions
         */
        public boolean victory();
        
        /**
         *  @return player victory level 0.0(total loss) to 1.0 (total victory)
         *          anybody not listed can be assumed to be at 0.0 score
         */
        public double getPlayerScore(int id);
        
        /**
         *  list players
         */
        public int[] getPlayers();
        /**
         *  list team scores 
         *  all teams which are not listed, can be assumed to be at 0.0 
         */
        public double getTeamScore(int id);
        /**
         *  list teams
         */
        public int[] getTeams();
        
        
        /**
         *  @return arrayList of reports generated by the 
         *          victory checking. Usually empty when no victory
         *          should never be null
         *
         *          might contain reports about victoryconditions which
         *          are about to be filled or are time triggered
         */
        public ArrayList<Report> getReports();
    }    
}