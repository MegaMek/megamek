/*
 * Copyright (c) 2024 - The MegaMek Team. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 */

package megamek.client.ui.swing.ai.editor;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import megamek.client.bot.duchess.ai.utility.tw.TWUtilityAIRepository;
import megamek.client.bot.duchess.ai.utility.tw.considerations.TWConsideration;

import javax.swing.*;
import java.awt.*;

public class ConsiderationPane extends JPanel {
    private JTextField considerationName;
    private JComboBox<TWConsideration> considerationComboBox;
    private JPanel curveContainer;
    private JTable parametersTable;
    private JPanel considerationPane;
    private JPanel topThingsPane;
    private JButton hideButton;
    private JButton showButton;
    private JButton newParameterButton;

    public ConsiderationPane() {
        $$$setupUI$$$();
        add(considerationPane);

//        considerationComboBox.addActionListener(e -> {
//            TWConsideration consideration = (TWConsideration) considerationComboBox.getSelectedItem();
//            considerationName.setText(consideration.getName());
//            ((ParametersTableModel) parametersTable.getModel()).setParameters(consideration.getParameters());
//        });

        hideButton.addActionListener(e -> {
            curveContainer.setVisible(false);
            showButton.setVisible(true);
            hideButton.setVisible(false);
        });

        showButton.addActionListener(e -> {
            curveContainer.setVisible(true);
            hideButton.setVisible(true);
            showButton.setVisible(false);
        });

        showButton.setVisible(false);
    }

    public void setHoverStateModel(HoverStateModel model) {
        ((CurvePane) this.curveContainer).setHoverStateModel(model);
    }

    private void createUIComponents() {
        parametersTable = new JTable(new ParametersTableModel());
        parametersTable.setModel(new ParametersTableModel());

        considerationComboBox = new JComboBox<>(TWUtilityAIRepository.getInstance().getConsiderations().toArray(new TWConsideration[0]));
        curveContainer = new CurvePane();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        considerationPane = new JPanel();
        considerationPane.setLayout(new GridBagLayout());
        topThingsPane = new JPanel();
        topThingsPane.setLayout(new GridLayoutManager(6, 5, new Insets(0, 0, 0, 0), -1, -1));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 5;
        gbc.gridheight = 2;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        considerationPane.add(topThingsPane, gbc);
        topThingsPane.add(considerationComboBox, new GridConstraints(1, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        considerationName = new JTextField();
        topThingsPane.add(considerationName, new GridConstraints(3, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        topThingsPane.add(curveContainer, new GridConstraints(5, 0, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(400, 300), new Dimension(400, 300), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Curve:");
        topThingsPane.add(label1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Name:");
        topThingsPane.add(label2, new GridConstraints(2, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Type:");
        topThingsPane.add(label3, new GridConstraints(0, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        hideButton = new JButton();
        hideButton.setText("Hide");
        topThingsPane.add(hideButton, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showButton = new JButton();
        showButton.setText("Show");
        topThingsPane.add(showButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        topThingsPane.add(spacer1, new GridConstraints(4, 3, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 5;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        considerationPane.add(parametersTable, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Parameters:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        considerationPane.add(label4, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        considerationPane.add(spacer2, gbc);
        newParameterButton = new JButton();
        newParameterButton.setText("New Parameter");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        considerationPane.add(newParameterButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return considerationPane;
    }

}
