package megamek.common;

/**
 * A class that keeps track of information related to an ECM field.
 * @author arlith
 *
 */
public class ECMInfo {
    
    /**
     * The radius of the ECM field.
     */
    public int range;
    
    /**
     * The center location of the ECM field.
     */
    public Coords pos;
    
    /**
     * The id of the owning player, used to determine if this ECMInfo belongs to
     * an enemy or not.
     */
    public IPlayer owner;
    /**
     * The strength of the ECM field, counted in number of fields.
     */
    public double strength = 0;
    
    /**
     * Determines if this field is generated by an Angel ECM, since Angel ECMs
     * are inherently stronger than those from other ECM.
     */
    public int angelStrength = 0;
    
    /**
     * Determines if this field is ECM or ECCM.
     */
    public boolean isECCM = false;
    
    public ECMInfo() {
    }
    
    public ECMInfo(int range, double strength, Entity e) {
        owner = e.getOwner();
        pos = e.getPosition();        
        this.range = range;
        this.strength = strength;
    }
    
    public ECMInfo(int range, Coords pos, IPlayer owner, double strength,
            int angelStrength, boolean isECCM) {

        this.range = range;
        this.pos = pos;
        this.owner = owner;
        this.strength = strength;
        this.angelStrength = angelStrength;
        this.isECCM = isECCM;
    }
    
    public boolean isAngel() {
        return angelStrength > 0;
    }
    /**
     * 
     * @param r  
     * @param p
     * @param s
     */
    public ECMInfo(int r, Coords p, double s) {
        range = r;
        pos = p;
        strength = s;
    }
    
    public void addECMEffects(ECMInfo other) {
        // Enemy ECM
        if (owner.isEnemyOf(other.owner) && !other.isECCM) {
            strength += other.strength;
            angelStrength += other.angelStrength;
        // Allied ECCM
        } else if (!owner.isEnemyOf(other.owner) && other.isECCM) {
            strength -= other.strength;
            angelStrength -= other.angelStrength;
        }
        // Set the ECCM flag
        if (angelStrength < 0 || (strength < 0 && angelStrength < 1)) {
            isECCM = true;
        } else {
            isECCM = false;
        }
        
    }
    
    public String toString() {
        return "pos: " + pos.toString() + ", owner: " + owner.getName()
                + ", r: " + range + ", s: " + strength + ", aS: "
                + angelStrength + ", isECCM: " + isECCM;
    }
}